:- import load_dsv/3, add_cvt_type_hook/2, remove_cvt_type_hook/1 from proc_files.
:- import ith/3, atom_prefix/2 from basics.
:- table site/1, useful_site/1, year/1, useful_year/1, useful_disappeared/2.

/* Loading a semicolon-delimited copy of the extended dataset */
load_rows(F) :-
    remove_cvt_type_hook(maybe_num),
    add_cvt_type_hook(maybe_num,atom_mnum(_,_)),
    load_dsv(F,row(atom,maybe_num,maybe_num,maybe_num,maybe_num,maybe_num,maybe_num,maybe_num,maybe_num,maybe_num,maybe_num,maybe_num),[titles]).

/* Facts for the database */

entry(Site,Year,Spec,Entry) :-
    Row = row(Site,Year,_,_,_,_,_,_,_,_,_,_),
    once(call(Row)),
    Row =.. [_|Args],
    once(ith(I,[site,year,cox,coy,ele,pro,wid,crb,rbp,cda,young,young_bool],Spec)),
    ith(I,Args,Entry).

entry_(Year,Spec,Site,Entry) :-
    entry(Site,Year,Spec,Entry).

site(Site) :-
    row(Site,2009,_,_,_,_,_,_,_,_,_,_).

useful_site(Site) :-
    site(Site).

year(Year) :-
    row(_,Year,_,_,_,_,_,_,_,_,_,_).

channel_width(Pair,Width) :-
    nonvar(Pair),
    Pair = Site-_,
    channel_width(Site,Width).
channel_width(Site,Width) :-
    not_pair(Site),
    entry(Site,2009,wid,Width).
log_channel_width(Site,LogWidth) :-
    channel_width(Site,Width),
    LogWidth is log(Width).

altitude(Pair,Alt) :-
    nonvar(Pair),
    Pair = Site-_,
    altitude(Site,Alt).
altitude(Site,Alt) :-
    not_pair(Site),
    entry(Site,2009,ele,Alt).

protected(Pair,Prot) :-
    nonvar(Pair),
    Pair = Site-_,
    protected(Site,Prot).
protected(Site,Prot) :-
    not_pair(Site),
    entry(Site,2009,pro,Prot).
protected(Site) :-
    protected(Site,1).
unprotected(Site) :-
    protected(Site,0).

crb(Pair,CRB) :-
    nonvar(Pair),
    Pair = Site-_,
    crb(Site,CRB).
crb(Site,CRB) :-
    not_pair(Site),
    entry(Site,2009,crb,CRB).
crb(Site) :-
    crb(Site,1).
no_crb(Site) :-
    crb(Site,0).

young_disappeared(Pair,1) :-
    nonvar(Pair),
    Pair = Site-Year,
    young_disappeared(Site,Year).
young_disappeared(Pair,0) :-
    nonvar(Pair),
    Pair = Site-Year,
    no_young_disappeared(Site,Year).
young_disappeared(Site,Year) :-
    young_last(Site,Year),
    no_young(Site,Year).
no_young_disappeared(Site,Year) :-
    young_last(Site,Year),
    young(Site,Year).
young_disappeared(Site-Year) :-
    young_disappeared(Site,Year).


check_dam(Pair,Dam) :-
    nonvar(Pair),
    Pair = Site-_,
    check_dam(Site,Dam).
check_dam(Site,CDA) :-
    entry(Site,2009,cda,CDA).
check_dam(Site) :-
    check_dam(Site,1).
no_check_dam(Site) :-
    check_dam(Site,0).

nat_flood_levees(X,NatFloodLevees) :-
    flood_levees(X,FloodLevees),
    crb(X,CRB),
    NatFloodLevees is FloodLevees*(1-CRB).
nat_flood_levees(Site) :-
    nat_flood_levees(Site,1).
no_nat_flood_levees(Site) :-
    nat_flood_levees(Site,0).


flood_levees(Pair,FloodLevees) :-
    nonvar(Pair),
    Pair = Site-_,
    flood_levees(Site,FloodLevees).
flood_levees(Site,FloodLevees) :-
    not_pair(Site),
    entry(Site,2009,rbp,FloodLevees).
flood_levees(Site) :-
    flood_levees(Site,1).
no_flood_levees(Site) :-
    flood_levees(Site,0).

useful_year(Year) :-
    year(Year),
    Year \= 2009.

useful_disappeared(Site,Year) :-
    young_disappeared(Site,Year).
useful_disappeared(Site,Year) :-
    no_young_disappeared(Site,Year).


% Other features that may be considered

young(Site,Year) :-
    entry(Site,Year,young_bool,1).
no_young(Site,Year) :-
    entry(Site,Year,young_bool,0).


wide_channel(Site) :-
    entry(Site,2009,wid,N),
    integer(N),
    N > 70.
narrow_channel(Site) :-
    entry(Site,2009,wid,N),
    integer(N),
    N =< 70.


young_last(Site,Year) :-
    LastYear is Year - 1,
    young(Site,LastYear).
no_young_last(Site,Year) :-
    LastYear is Year - 1,
    no_young(Site,LastYear).


young_appeared(Site,Year) :-
    no_young_last(Site,Year),
    young(Site,Year).
no_young_appeared(Site,Year) :-
    no_young_last(Site,Year),
    no_young(Site,Year).

young_appeared(Site-Year) :-
    young_appeared(Site,Year).

useful_appeared(Site,Year) :-
    young_appeared(Site,Year).
useful_appeared(Site,Year) :-
    no_young_appeared(Site,Year).


rv_system(System,Site) :-
    rv_system(System),
    atom_prefix(Site,System).

rv_system(tn,Site) :-
    atom_prefix(Site,av).

rv_system(bz).
rv_system(tn).
rv_system(bl).
rv_system(vi).
rv_system(pd).

distance(Site1,Site2,D) :-
    entry(Site1,2009,cox,X1),
    entry(Site1,2009,coy,Y1),
    entry(Site2,2009,cox,X2),
    entry(Site2,2009,coy,Y2),
    D is sqrt((X1 - X2)*(X1 - X2) + (Y1 - Y2)*(Y1 - Y2)).

closeby(Site1,Site2) :-
    site(Site1),
    site(Site2),
    distance(Site1,Site2,D),
    D < 0.1.

plant_closeby(Site,Year) :-
    closeby(Site,Site1),
    adult_last(Site1,Year).



with(Pred1,Pred2,Site,N) :-
    call(Pred1,Site,N1),
    call(Pred2,Site,N2),
    N is N1*N2.
% Constructing With's for input
with(_,[],[]).
with(Pred1,[Pred|Preds],[with(Pred1,Pred)|WPreds]) :-
    with(Pred1,Preds,WPreds).

not_pair(X) :-
    var(X).
not_pair(X) :-
    nonvar(X),
    X \= _-_.

/* CSV Processing Utilities */

atom_mnum(X,N) :-
    is_number_atom(X),
    !,
    atom_codes(X,Codes),
    number_codes(N,Codes).
atom_mnum(X,X).





